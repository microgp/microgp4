#!/usr/bin/env python3
# -*- coding: utf-8 -*-
#############################################################################
#           __________                                                      #
#    __  __/ ____/ __ \__ __   This file is part of MicroGP v4!2.0          #
#   / / / / / __/ /_/ / // /   A versatile evolutionary optimizer & fuzzer  #
#  / /_/ / /_/ / ____/ // /_   https://github.com/microgp/microgp4          #
#  \__  /\____/_/   /__  __/                                                #
#    /_/ --MicroGP4-- /_/      You don't need a big goal, be Î¼-ambitious!   #
#                                                                           #
#############################################################################
# Copyright 2022-23 Giovanni Squillero and Alberto Tonda
# SPDX-License-Identifier: Apache-2.0

import pytest

import microgp4 as ugp


class MutableValueBag(ugp.classes.ValueBag):

    def __setitem__(self, key, value):
        self.__dict__[key] = value


def test_macro_zero():
    mz = ugp.classes.readymade_macros.MacroZero()
    assert isinstance(mz, ugp.classes.readymade_macros.MacroZero)
    assert hasattr(mz, 'TEXT')
    assert hasattr(mz, 'EXTRA_PARAMETERS')
    assert hasattr(mz, '_parameter_types')
    assert mz.TEXT.startswith('{_comment} Automagically generated by MicroGP')
    assert mz.EXTRA_PARAMETERS == dict()
    assert mz._parameter_types == dict()


def test_info():
    info = ugp.classes.readymade_macros.Info()
    assert isinstance(info, ugp.classes.readymade_macros.Info)
    assert hasattr(info, 'TEXT')
    assert hasattr(info, 'EXTRA_PARAMETERS')
    assert hasattr(info, '_parameter_types')
    assert info.TEXT.startswith('{_comment} [INFO] NOW: ')
    assert info.EXTRA_PARAMETERS == dict()
    assert info._parameter_types == dict()


def test_macro_zero_creation():
    mz = ugp.classes.readymade_macros.MacroZero()
    assert isinstance(mz, ugp.classes.readymade_macros.MacroZero)


def test_info_creation():
    info = ugp.classes.readymade_macros.Info()
    assert isinstance(info, ugp.classes.readymade_macros.Info)


def test_macro_equality():
    mz1 = ugp.classes.readymade_macros.MacroZero()
    mz2 = ugp.classes.readymade_macros.MacroZero()
    assert mz1 == mz2

    info1 = ugp.classes.readymade_macros.Info()
    info2 = ugp.classes.readymade_macros.Info()
    assert info1 == info2

    assert mz1 != info1
